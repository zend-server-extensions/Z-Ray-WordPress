<?php 
$tableParams = array(
	'tableId' 			=> 'wordpress-cache-objects-tree',
    'tableWidth'        => '4',
);
?>

    
<div>
    
    <div>
        <div >
            <div class="pieChartDiv" >
				<canvas id="cache-statistics-chart" width="170" height="170"/>
			</div>
            <div class="pieLegendDiv" id="cache-statistics-chart-lagend" width="100" height="100" >
				<u>Largest Objects:</u>
			</div>
        </div>
    
     
   </div>
   
   <div class="cacheTableDiv">
     <?php echo $this->zrayTable($tableParams); //zrayTableHtml ?>
   </div>
        
</div>


<script type="text/javascript">

<?php echo $params['resources']['chart']; ?>

(function() {
	var storage = zray.getStorage('wordpressCacheObjectsTree');
	// create main table
	var maintable = zray.createGeneralTreeTable(storage, jQuery('#<?php echo $tableParams['tableId']; ?>'));
	maintable.setColumns([{
		label: 'name',
		propertyName: 'name',
		width: '50%',
		sortable:"true",
		attributes: {'class': 'zdb-tree-table-cell-path zdb-ellipsis zdb-monospace'}
	},
	{
		label: 'size (kb)',
		propertyName: 'size',
		width: '25%',
		attributes: {'class': 'zdb-monospace zdb-ellipsis'},
		sortable:"true",
		defaultSort: 'desc',
		getHtml: function(val, rec) {
			var cushion = $zendDevBar('<div>');
			cushion.attr('title', val);
			return cushion.text(val);
		}
	},
	{
		label: 'hits',
		propertyName: 'hits',
		width: '25%',
		sortable:"true",
		attributes: {'class': 'zdb-monospace zdb-ellipsis'}
	}]);
	
	if(maintable.setRootHtml){
		maintable.setRootHtml(function(children) {
			var total = 0; 
			jQuery.each(children,function(k,v){ 
				total+=v.hits;
			}); 
			return total;
		});
	}
	// create main table - end

	zray.registerDataHandler('wordpress', 'cacheStats', function(statsData, requestData) {
		jQuery('[data-name="zrayExtension:wordpress/cacheObjects"] h1').append(' <small>(General Statistics - Hits:'+statsData[0]+', Misses: '+statsData[1]+', Total Size: '+statsData[2]+'kb)</small>');
	});
	zray.registerDataHandler('wordpress', 'cacheObjects', function(extensionData, requestData) {
		storage.setData(extensionData);
		jQuery('[data-name="zrayExtension:wordpress/cacheObjects"] .zdb-toolbar-info').append(' ('+extensionData.length+')');
	});
	zray.createSearch(storage, jQuery('#<?php echo $params['searchId']; ?>'), maintable);

	(function() {
		zray.registerDataHandler('wordpress', 'cachePieStats', function(extensionData, requestData) {
			var colors = [
	            {'color': '#F7464A', 'highlight': '#FF5A5E'},
	            {'color': '#46BFBD', 'highlight': '#5AD3D1'},
	            {'color': '#FDB45C', 'highlight': '#FFC870'},
	            {'color': '#949FB1', 'highlight': '#A8B3C5'},
	            {'color': '#4D5360', 'highlight': '#616774'},
	            {'color': '#b48ead', 'highlight': '#b48eb3'},
	            {'color': '#5B90BF', 'highlight': '#5bbabf'}
	        ];
			var pieData = [];
			jQuery.each(extensionData, function(key, data) {
				pieData.push({
					'label': data.name,
					'value': parseFloat(data.count),
					'color': colors[key].color,
					'highlight': colors[key].highlight,
				    });
			});

			//String - A legend template
			var options = { 
				tooltipTemplate: "<%=label%>: <%=value%>kb",
				legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span class=\"legendColorSpan\" style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
			};
	       	var ctx = document.getElementById("cache-statistics-chart").getContext("2d");
	       	var myPie = new Chart(ctx).Pie(pieData, options);
	       	var legendText = myPie.generateLegend();
	        $zendDevBar('#cache-statistics-chart-lagend').append(legendText);
		});
	})();
})();
</script>

